Distributed programming in erlang:
----------------------------------
Distributed programming means sharing information from one machine to another machine through internet or intranet.

steps to create and simple distributed application using erlang:

Step 1. Program :
-module(pingpong).

-export([start_ping/1, start_pong/0,  ping/2, pong/0]).

ping(0, Pong_Node) ->
    {pong, Pong_Node} ! finished,
    io:format("ping finished~n", []);

ping(N, Pong_Node) ->
    {pong, Pong_Node} ! {ping, self()},
    receive
        pong ->
            io:format("Ping received pong~n", [])
    end,
    ping(N - 1, Pong_Node).

pong() ->
    receive
        finished ->
            io:format("Pong finished~n", []);
        {ping, Ping_PID} ->
            io:format("Pong received ping~n", []),
            Ping_PID ! pong,
            pong()
    end.

start_pong() ->
    register(pong, spawn(pingpong, pong, [])).

start_ping(Pong_Node) ->
    spawn(pingpong, ping, [3, Pong_Node]).
---------------------------------------------------------------------
Step 2. compile program : erlang shell > c(pingpong).
Note : Com 1 and Com 2 should have erlang and compiled bean file.

Step 3. 
Com 1 : open terminal -> create node, using the following command.
erl -sname username -setcookie cookiename
Ex:
erl -sname jack -sercookie test

Com 2 : open terminal -> create node, using the following command.
erl -sname sam -setcookie test

Note : cookiename should be same.

Step 4. 

Com 1>erl -sname jack -setcookie test
Eshell V7.2.1  (abort with ^G)
(jack@Com1)1> 

Com 2>erl -sname sam -setcookie test
Eshell V7.2.1  (abort with ^G)
(sam@Com2)1> 

Step 5.
Run following command in appropriate terminal: 
(jack@Com1)1> pingpong:start_pong().

(sam@Com2)1> pingpong:start_ping(jack@Com1).

message will passed between computers.